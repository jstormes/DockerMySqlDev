#!/usr/bin/env bash
#
# Script to populate a MySql Docker container from a discreet set of
# directories containing *.sql files.  All files are run in 'sort -V'
# order.
#
# Author James Stormes
#

export MYSQL_HOST=127.0.0.1
export MYSQL_PWD=${MYSQL_ROOT_PASSWORD}



wait_for_mysql () {
   until mysqladmin --no-defaults ping >/dev/null 2>&1; do
       echo -n "."; sleep 0.2
   done
   until echo "show databases;" | mysql >/dev/null 2>&1; do
       echo -n "."; sleep 0.2
   done
}

create_database () {
    wait_for_mysql
    echo
    echo "Verifying database '$1' exists."
    echo "CREATE DATABASE IF NOT EXISTS $1;" | mysql
}

run_sql_files () {
    wait_for_mysql
    echo
    if [ -d "$1" ]; then
        cwd=$(pwd)
        cd $1
        for f in `ls *.sql | sort -V`;
            do
                echo "Processing file '$f'"
                mysql ${MYSQL_DATABASE_NAME} < ${f}
            done
        cd ${cwd}
    fi
}

#############################################################################
##################################### Main ##################################
#############################################################################

wait_for_mysql
create_database $MYSQL_DATABASE_NAME
run_sql_files "sql/pre"
run_sql_files "sql/base"
run_sql_files "sql/seed"
run_sql_files "sql/post"

# Set default database
echo "[client]" > ~/.my.cnf
echo "database=\"$MYSQL_DATABASE_NAME\"" >> ~/.my.cnf
echo "" >> ~/.my.cnf

echo
echo
echo "**********************************************************************"
echo "*                                                                     "
echo "* To access mysql from this command line type 'mysql'.                "
echo "*                                                                     "
echo "* To connect from the host system use IP address 127.0.0.1 port ${EXTERNAL_MYSQL_PORT}  "
echo "* user id 'root' password is '${MYSQL_PWD}'.                          "
echo "*                                                                     "
echo "* To connect from another Docker container use the DNS name $(hostname) "
echo "* port 3306.  Be sure to link to this containers using the            "
echo "* --link option (--link $CONTAINER_NAME:$CONTAINER_NAME)              "
echo "*                                                                     "
echo "* ALL DATABASE CHANGES WILL BE LOST WHEN YOU EXIT THIS CONTAINER!!!   "
echo "*                                                                     "
echo "* Type 'exit' to exit this container.                                 "
echo "*                                                                     "
echo "**********************************************************************"
echo
echo

exec bash
